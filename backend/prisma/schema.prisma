generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // weil kein Zugriff auf mysql um migration zu erstellen
}

model User {
  id            Int             @id @default(autoincrement())
  vorname       String
  nachname      String
  role          UserRole
  skills        Skill[]         @relation("UserSkills")
  teams         Team[]          @relation("TeamMembers")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  urlaub        Urlaub[]        @relation("Urlaub")
  arbeitszeit   Int
  urlaubstage   Int
  login         Login?
  notifications Notifications[] @relation("UserNotifications")
  estimations   Estimation[]    @relation("UserEstimations")
}

model Notifications {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
  isRead    Boolean
  userId    Int
  user      User     @relation("UserNotifications", fields: [userId], references: [id])
}

model Skill {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]   @relation("UserSkills")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        Int       @id @default(autoincrement())
  name      String
  members   User[]    @relation("TeamMembers")
  roadmapId Int?      @unique
  roadmap   Roadmap?  @relation(fields: [roadmapId], references: [id])
  projects  Project[] @relation("TeamProjects")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Roadmap {
  id        Int       @id @default(autoincrement())
  projects  Project[] @relation("RoadmapProjects")
  teams     Team?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id               Int           @id @default(autoincrement())
  name             String
  description      String
  startDate        DateTime?
  endDate          DateTime?
  roadmapId        Int?
  roadmap          Roadmap?      @relation("RoadmapProjects", fields: [roadmapId], references: [id])
  team             Team?         @relation("TeamProjects", fields: [teamid], references: [id])
  teamid           Int
  estimations      Estimation[]  @relation("ProjectEstimations")
  priorityPosition Int?
  projectStatus    ProjectStatus
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Estimation {
  id        Int     @id @default(autoincrement())
  hours     Int
  projectId Int
  userId    Int
  project   Project @relation("ProjectEstimations", fields: [projectId], references: [id])
  user      User    @relation("UserEstimations", fields: [userId], references: [id])

  @@unique([projectId, userId])
}

model Login {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  userId   Int    @unique
  user     User   @relation(fields: [userId], references: [id])
}

model Urlaub {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation("Urlaub", fields: [userId], references: [id])
  startdatum DateTime
  enddatum   DateTime
}

enum UserRole {
  PO
  SM
  Developer
  Admin
  Bereichsleiter
}

enum ProjectStatus {
  offen
  inBearbeitung
  geschlossen
}
