// This is your Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  vorname       String
  nachname      String
  role          UserRole
  skills        Skill[]   @relation("UserSkills") // Many-to-many relation with Skill
  teams         Team[]    @relation("TeamMembers") // Relation with Team
  token         String?
  projects      Project[] @relation("ProjectDevelopers") // Relation with Projects
  scrumMasters  Project[] @relation("ScrumMaster") // Relation with scrumMaster
  productOwners Project[] @relation("ProductOwner") // Relation with productOwner
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Skill {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]   @relation("UserSkills") // Many-to-many relation with User
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        Int       @id @default(autoincrement())
  name      String
  members   User[]    @relation("TeamMembers") // Relation with User
  projects  Project[] @relation("TeamProjects") // Relation with Projects
  roadmapId Int? // Foreign key for the roadmap
  roadmap   Roadmap?  @relation("TeamRoadmap", fields: [roadmapId], references: [id]) // Relation with Roadmap
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Roadmap {
  id        Int       @id @default(autoincrement())
  title     String // Added title for clarity
  projects  Project[] @relation("RoadmapProjects") // Relation with Projects
  teams     Team[]    @relation("TeamRoadmap") // Relation with Teams
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id               Int       @id @default(autoincrement())
  name             String
  description      String
  startDate        DateTime?
  endDate          DateTime?
  developers       User[]    @relation("ProjectDevelopers") // Relation with Users
  scrumMasterId    Int? // Foreign key for scrumMaster
  scrumMaster      User?     @relation("ScrumMaster", fields: [scrumMasterId], references: [id], onDelete: Cascade) // Relation with User
  productOwnerId   Int? // Foreign key for productOwner
  productOwner     User?     @relation("ProductOwner", fields: [productOwnerId], references: [id], onDelete: Cascade) // Relation with User
  teamId           Int? // Foreign key for Team
  team             Team?     @relation("TeamProjects", fields: [teamId], references: [id]) // Relation with Team
  roadmapId        Int? // Foreign key for Roadmap
  roadmap          Roadmap?  @relation("RoadmapProjects", fields: [roadmapId], references: [id]) // Relation with Roadmap
  effortEstimation String
  estimationDays   Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

enum UserRole {
  PO
  SM
  Developer
  Admin
}
